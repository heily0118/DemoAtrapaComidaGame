/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autonoma.demoatrapacomida.gui;

import autonoma.demoatrapacomida.elements.GraphicContainer;
import autonoma.demoatrapacomida.elements.VideoJuego;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Rectangle;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * 
 * @author Heily Yohana Rios Ayala <heilyy.riosa@gmail.com>
 * @since 20250516
 * @version 1.0.0
 */

public class VentanaPrincipal extends javax.swing.JFrame implements GraphicContainer  {

    
    private VideoJuego juego;
    public VentanaPrincipal(VideoJuego juego) {
        initComponents();
        
        this.juego = juego;
        pedirNombreJugador();
        this.setSize(800,800);
         setResizable(false);
        this.setLocationRelativeTo(null);
        
        
        try{ 
        this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/DemoAtrapaComida/images/Logo.jpeg")).getImage());
        
        }catch(NullPointerException e){
            System.out.println("Imagen no encontrada");
            
        }


        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

     
    private void pedirNombreJugador() {
            while (true) {
            String nombre = JOptionPane.showInputDialog(this, "Ingresa tu nombre:");
            if (nombre != null && !nombre.trim().isEmpty()) {
                this.juego.getCampo().getJugador().setNombre(nombre.trim());
                break;
            } else {
                JOptionPane.showMessageDialog(this, "Debes ingresar un nombre para continuar.");
            }
        }
    }
    

    @Override
    public void paint(Graphics g) {
        super.paint(g); // Llama al método de la clase padre para asegurar que se dibuje el fondo
        dibujar(g); // Llama a tu método dibujar
        
        
        g.setColor(Color.BLACK);
        g.setFont(new Font("Arial", Font.BOLD, 24));
        g.drawString(juego.getCampo().getJugador().getNombre(), 25, 80);
        g.drawString("PUNTAJE", 25, 100);
        g.drawString(String.valueOf(juego.getCampo().getJugador().getPuntaje().getPuntajeActual()), 150, 100);
    }

    public void dibujar(Graphics g) {
        
        
        g.setColor(new Color(34, 139, 34));
        g.fillRect(0, 0, 800, 800);
    }
    
    @Override
    public void refresh(Graphics g) {
        
        this.repaint();
    }

    @Override
    public Rectangle getBoundaries() {
       return this.getBounds();
    }
}
